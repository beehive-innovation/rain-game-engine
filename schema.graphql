type AccessoriesFactory @entity {
  id: ID!
  implementation: Bytes!
  children: [Accessory!]
}

type Accessory @entity {
  id: ID!
  totalItems: BigInt!
  owner: Bytes!
  admin: Bytes!
  baseURI: String!
  creators: [Creator!]
  classes: [ItemClass!]
  items: [Item!]
  deployBock: BigInt!
  deployTimestam: BigInt!
}

type Item @entity {
  id: ID!
  itemId: BigInt!
  creator: Bytes!
  lootBoxID: BigInt!
  priceConfig: PriceConfig!
  canMintConfig: CanMintConfig!
  currencies: [String!]!
  itemClass: ItemClass!
  rarity: Int!
  creationBock: BigInt!
  creationTimestam: BigInt!
}

type ItemClass @entity{
  id: ID!
  attributes: [String!]!
}

type PriceConfig @entity {
  id: ID!
  sources: [Bytes!]!
  constants: [BigInt!]!
  stackLength: BigInt!
  argumentsLength: BigInt!
}

type CanMintConfig @entity {
  id: ID!
  sources: [Bytes!]!
  constants: [BigInt!]!
  stackLength: BigInt!
  argumentsLength: BigInt!
}

type Creator @entity{
  id: ID!
  address: Bytes!
}

type Holder @entity {
  id: ID!
  address: Bytes!
  itemsOwned: [ItemOwned!]
}

type ItemOwned @entity {
  id: ID!
  item: Item!
  itemId: BigInt!
  count: BigInt!
}